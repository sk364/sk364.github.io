{"version":3,"sources":["utils.js","post-view.js","search.js","constants.js","post-list.js","nav-bar.js","home.js","post-detail.js","app.js","index.js"],"names":["computeRecordPublishedSince","publishedAt","diffHours","Date","Math","floor","getTagString","tagList","map","tag","join","PostView","id","title","bait","tags","numMinRead","lastPost","tagNodes","split","index","href","publishedSince","className","onClick","window","location","Search","searchText","onChange","type","e","target","value","placeholder","POSTS","PostList","searchQuery","useState","searchInputValue","setSearchInputValue","posts","setPosts","setFilteredPosts","length","searchTextList","filter","_","trim","filteredPosts","post","found","startsWith","slice","indexOf","toLowerCase","useEffect","handleDelayedSearch","useCallback","debounce","val","idx","toString","NavBar","name","route","icon","item","src","alt","rel","Home","URLSearchParams","useLocation","search","get","PostDetail","match","params","find","_post","content","setContent","fetch","then","data","text","accordions","document","getElementsByClassName","accordionContents","acc","onclick","accContent","classList","contains","remove","add","tagString","parse","App","basename","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03cd27a3.chunk.js","sourcesContent":["export const computeRecordPublishedSince = publishedAt => {\n  const now = new Date();\n  const publishedDate = new Date(publishedAt);\n  const diffHours = (now - publishedDate) / (60 * 60 * 1000);\n\n  let publishedSince;\n\n  if (diffHours <= 0.5) publishedSince = \"New Post!\";\n  else if (diffHours < 48) publishedSince = \"1 day ago\";\n  else if (diffHours < 168) publishedSince = `${Math.floor(diffHours / 24)} days ago`;\n  else if ((diffHours / 24) < 30) publishedSince =\n    `${Math.floor(diffHours / (24 * 7))} week${Math.floor(diffHours / (24 * 7)) > 1 ? \"s\" : \"\"} ago`;\n  else publishedSince = `${Math.floor(diffHours / (24 * 30))} month${Math.floor(diffHours / (24 * 30)) > 1 ? \"s\" : \"\"} ago`;\n\n  return publishedSince;\n};\n\nexport const getTagString = tagList => tagList && tagList.map(tag => `#${tag}`).join(\" \");\n","import \"./post-view.css\";\n\nimport React from \"react\";\n\nimport { getTagString, computeRecordPublishedSince } from \"./utils\";\n\nconst PostView = ({\n  id,\n  title,\n  publishedAt,\n  bait,\n  tags,\n  numMinRead,\n  lastPost\n}) => {\n  const goToDetail = () => window.location.href = `/#/${id}`;\n\n  const tagNodes = getTagString(tags).split(\" \").map((tag, index) => {\n    return <a key={tag} href={`/#/?search=in:${tags[index]}`}>{tag}</a>;\n  });\n  const publishedSince = computeRecordPublishedSince(publishedAt);\n\n  return(\n    <div className=\"post-view\" onClick={goToDetail}>\n      <div>\n        <span className=\"title\">{title}</span>\n        <span className=\"date\">{publishedSince}</span>\n        <span className=\"reading-time right-circle\">{numMinRead} min read</span>\n      </div>\n      <div>\n        <span className=\"bait\">{bait}</span>\n        <span className=\"tags\">{tagNodes}</span>\n      </div>\n      {!lastPost && <hr />}\n    </div>\n  );\n};\n\nexport default PostView;\n","import React from \"react\";\n\nconst Search = ({ searchText, onChange }) => {\n  return (\n    <input\n      className=\"search-input\"\n      type=\"text\"\n      onChange={(e) => onChange(e.target.value)}\n      value={searchText}\n      placeholder=\"Search (use in:<tag name> to search by tags)\" />\n  );\n};\n\nexport default Search;\n","export const POSTS = [\n  {\n    id: 1,\n    title: \"React on Github\",\n    bait: \"Combine the powers of gh-pages and create-react-app!\",\n    tags: [\"tutorial\", \"react\", \"github\"],\n    numMinRead: 3,\n    publishedAt: \"2021-08-07T00:00:00\",\n  },\n  // {\n  //   id: 3,\n  //   title: \"Descartes' Meditations on First Philosophy (Part 1)\",\n  //   bait: \"Journey into the Descartes' mind\",\n  //   tags: [\"philosophy\", \"descartes\", \"summary\"],\n  //   numMinRead: 10,\n  //   publishedAt: \"2021-11-07T00:00:00\",\n  // },\n  {\n    id: 4,\n    title: \"Finding research papers\",\n    bait: \"\",\n    tags: [\"programming\", \"project\", \"utility\", \"python\"],\n    numMinRead: 10,\n    publishedAt: \"2022-03-23T20:27:00\",\n  }\n];\n","import \"./post-list.css\";\n\nimport _ from \"lodash\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport PostView from \"./post-view\";\nimport Search from \"./search\";\nimport { POSTS } from \"./constants\";\n\nconst PostList = ({ searchQuery }) => {\n  const [searchInputValue, setSearchInputValue] = useState(searchQuery || \"\");\n  const [posts, setPosts] = useState(POSTS);\n\n  const setFilteredPosts = (searchText) => {\n    if (searchText.length > 0) {\n      const searchTextList = searchText.split(/\\s/).filter(_ => _).map(_ => _.trim());\n      const filteredPosts =\n        POSTS.filter(post => {\n          let found = false;\n          for (const searchText of searchTextList) {\n            if (searchText.startsWith(\"in:\")) {\n              const tag = searchText.slice(3);\n              found |= post.tags.indexOf(tag.toLowerCase()) !== -1;\n            } else {\n              found |= post.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n              found |= post.bait.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n            }\n          }\n          return found;\n        });\n        setPosts(filteredPosts);\n    } else setPosts(POSTS);\n  };\n\n  useEffect(() => {\n    setSearchInputValue(searchQuery || \"\");\n    setFilteredPosts(searchQuery || \"\");\n  }, [searchQuery]);\n\n  const handleChangeSearch = (searchText) => {\n    setSearchInputValue(searchText);\n  };\n\n  const handleDelayedSearch = useCallback(_.debounce((searchText) => setFilteredPosts(searchText), 500), []);\n\n  return(\n    <div className=\"post-list-container\">\n      <Search searchText={searchInputValue} onChange={(val) => {\n        handleChangeSearch(val);\n        handleDelayedSearch(val);\n      }} />\n      {posts.length > 0 && (\n        <>\n          <div className=\"post-list\">\n            {posts.map((post, idx) => {\n              return (\n                <PostView\n                  key={post.id.toString()}\n                  id={post.id}\n                  title={post.title}\n                  bait={post.bait}\n                  publishedAt={post.publishedAt}\n                  numMinRead={post.numMinRead}\n                  tags={post.tags}\n                  lastPost={idx === posts.length - 1} />\n              );\n            })}\n          </div>\n        </>\n      )}\n      {posts.length === 0 && <div className=\"no-results-msg\">No results found for your search.</div>}\n    </div>\n  );\n};\n\nexport default PostList;\n","import \"./nav-bar.css\";\nimport React from \"react\";\n\nconst NavBar = () => {\n\n  const items = [{\n    id: \"resume\",\n    name: \"Resume\",\n    route: \"./resume.pdf\",\n    icon: \"./resume.png\"\n  }, {\n    id: \"github\",\n    name: \"Github\",\n    route: \"https://github.com/sk364\",\n    icon: \"./github.png\"\n  }, {\n    id: \"li\",\n    name: \"Linked In\",\n    route: \"https://www.linkedin.com/in/supah-hakah\",\n    icon: \"./linkedIn.png\"\n  }];\n\n  return (\n    <div className=\"nav-bar\">\n      <div className=\"brand\">\n        Sachin Kukreja\n      </div>\n\n      <div className=\"nav-items\">\n        {items.map(item => {\n          return (\n            <div className=\"nav-item\" key={item.id}>\n              <img src={item.icon} className={`icon ${item.id}`} alt=\"icon\" />\n              {item.route && (\n                <a href={item.route} target=\"_blank\" rel=\"noreferrer\">{item.name}</a>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import \"./home.css\";\nimport React from \"react\";\nimport PostList from \"./post-list\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBar from \"./nav-bar\";\n\nconst Home = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const searchQuery = query.get(\"search\");\n\n  return (\n    <>\n      <NavBar />\n      <PostList searchQuery={searchQuery} />\n    </>\n  );\n};\n\nexport default Home;\n","import \"./post-detail.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport parse from \"html-react-parser\";\nimport NavBar from \"./nav-bar\";\nimport { POSTS } from \"./constants\";\nimport { getTagString, computeRecordPublishedSince } from \"./utils\";\n\nconst PostDetail = ({ match }) => {\n  const { id } = match.params;\n  const post = POSTS.find(_post => _post.id.toString() === id);\n  const { title, bait, tags, publishedAt, numMinRead } = post || {};\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`posts/${id}.html`).then(data => data.text()).then(data => setContent(data));\n  }, [id]);\n\n  useEffect(() => {\n    if (content) {\n      const accordions = document.getElementsByClassName(\"accordion\");\n      const accordionContents = document.getElementsByClassName(\"accordion-content\");\n\n      for (let idx = 0; idx < accordionContents.length; idx++) {\n        const acc = accordions[idx];\n        acc.onclick = () => {\n          const accContent = accordionContents[idx];\n\n          if (accContent.classList.contains(\"hidden\")) {\n            accContent.classList.remove(\"hidden\");\n          } else {\n            accContent.classList.add(\"hidden\");\n          }\n\n          if (acc.classList.contains(\"accordion-closed\")) {\n            acc.classList.remove(\"accordion-closed\");\n          } else {\n            acc.classList.add(\"accordion-closed\");\n          }\n        };\n      }\n    }\n  }, [content]);\n\n  const tagString = getTagString(tags);\n  const publishedSince = computeRecordPublishedSince(publishedAt);\n\n  return(\n    <>\n      <NavBar />\n      <div className=\"post-detail\">\n        <div className=\"container\">\n          <div className=\"post-header\">\n            <div className=\"post-title-container\">\n              <div className=\"post-title\">{title}</div>\n              <div className=\"post-bait\">{bait}</div>\n            </div>\n            <div className=\"post-metadata\">\n              <div className=\"post-reading-time right-circle\">{numMinRead} min read</div>\n              <div className=\"post-published-since\">{publishedSince}</div>\n              <div className=\"post-tags\">{tagString}</div>\n            </div>\n          </div>\n          { parse(content) }\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PostDetail;\n","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\nimport PostDetail from \"./post-detail\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:id\" component={PostDetail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}