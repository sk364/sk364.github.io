{"version":3,"sources":["utils.js","post-view.js","search.js","constants.js","post-list.js","nav-bar.js","home.js","post-detail.js","app.js","index.js"],"names":["computeRecordPublishedSince","publishedAt","diffHours","Date","Math","floor","getTagString","tagList","map","tag","join","PostView","id","title","bait","tags","numMinRead","lastPost","tagNodes","split","index","href","publishedSince","className","onClick","window","location","Search","searchText","onChange","type","e","target","value","placeholder","POSTS","PostList","searchQuery","useState","searchInputValue","setSearchText","posts","setPosts","useEffect","length","searchTextList","filter","_","trim","filteredPosts","post","found","startsWith","slice","indexOf","toLowerCase","setFilteredPosts","idx","toString","NavBar","useHistory","name","route","icon","item","src","alt","Home","URLSearchParams","useLocation","search","get","PostDetail","match","params","find","_post","content","htmlContent","tagString","replace","formatContent","parse","App","basename","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0da8ec73.chunk.js","sourcesContent":["export const computeRecordPublishedSince = publishedAt => {\n  const now = new Date();\n  const publishedDate = new Date(publishedAt);\n  const diffHours = (now - publishedDate) / (60 * 60 * 1000);\n\n  let publishedSince;\n\n  if (diffHours <= 0.5) publishedSince = \"New Post!\";\n  else if (diffHours < 48) publishedSince = \"1 day ago\";\n  else if (diffHours < 168) publishedSince = `${Math.floor(diffHours / 24)} days ago`;\n  else if ((diffHours / 24) < 30) publishedSince =\n    `${Math.floor(diffHours / (24 * 7))} week${Math.floor(diffHours / (24 * 7)) > 1 ? \"s\" : \"\"} ago`;\n  else publishedSince = `${Math.floor(diffHours / (24 * 30))} month${Math.floor(diffHours / (24 * 30)) > 1 ? \"s\" : \"\"} ago`;\n\n  return publishedSince;\n};\n\nexport const getTagString = tagList => tagList.map(tag => `#${tag}`).join(\" \");\n","import \"./post-view.css\";\n\nimport React from \"react\";\n\nimport { getTagString, computeRecordPublishedSince } from \"./utils\";\n\nconst PostView = ({\n  id,\n  title,\n  publishedAt,\n  bait,\n  tags,\n  numMinRead,\n  lastPost\n}) => {\n  const goToDetail = () => window.location.href = `/#/${id}`;\n\n  const tagNodes = getTagString(tags).split(\" \").map((tag, index) => {\n    return <a key={tag} href={`/#/?search=in:${tags[index]}`}>{tag}</a>;\n  });\n  const publishedSince = computeRecordPublishedSince(publishedAt);\n\n  return(\n    <div className=\"post-view\" onClick={goToDetail}>\n      <div>\n        <span className=\"title\">{title}</span>\n        <span className=\"date\">{publishedSince}</span>\n        <span className=\"reading-time right-circle\">{numMinRead} min read</span>\n      </div>\n      <div>\n        <span className=\"bait\">{bait}</span>\n        <span className=\"tags\">{tagNodes}</span>\n      </div>\n      {!lastPost && <hr />}\n    </div>\n  );\n};\n\nexport default PostView;\n","import React from \"react\";\n\nconst Search = ({ searchText, onChange }) => {\n  return (\n    <input\n      className=\"search-input\"\n      type=\"text\"\n      onChange={(e) => onChange(e.target.value)}\n      value={searchText}\n      placeholder=\"Search\" />\n  );\n};\n\nexport default Search;\n","export const POSTS = [];\n/*[\n  {\n    id: 1,\n    title: \"Tick tock goes the clock\",\n    bait: \"How much time have we lost?\",\n    tags: [\"opinion\", \"mind\"],\n    numMinRead: 3,\n    publishedAt: \"2021-04-01T00:00:00\",\n    content: `\n      <div class=\"post-title\">{title}</div>\n      <div class=\"post-bait\">{bait}</div>\n      <span>\n        <div class=\"post-reading-time right-circle\">{numMinRead} min read</div>\n        <div class=\"post-published-since\">{publishedSince}</div>\n      </span>\n      <div class=\"post-tags\">{tags}</div>\n      <div class=\"post-image\">\n        <img src=\"./github.png\" />\n      </div>\n      <div class=\"post-text\">Config gist above! ^</div>\n    `\n  },\n  {\n    id: 2,\n    title: \"When Zarathustra Spoke\",\n    bait: \"Friedrich Nietzsche imparting the age-old wisdom\",\n    tags: [\"book\"],\n    numMinRead: 6,\n    publishedAt: \"2021-04-30T00:00:00\",\n    content: \"<div>bbb</div>\"\n  }\n];*/\n","import \"./post-list.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport PostView from \"./post-view\";\nimport Search from \"./search\";\nimport { POSTS } from \"./constants\";\n\nconst PostList = ({ searchQuery }) => {\n  const [searchInputValue, setSearchText] = useState(searchQuery || \"\");\n  const [posts, setPosts] = useState(POSTS);\n\n  const setFilteredPosts = (searchText) => {\n    if (searchText.length > 0) {\n      const searchTextList = searchText.split(/\\s/).filter(_ => _).map(_ => _.trim());\n      const filteredPosts =\n        POSTS.filter(post => {\n          let found = false;\n          for (const searchText of searchTextList) {\n            if (searchText.startsWith(\"in:\")) {\n              const tag = searchText.slice(3);\n              found |= post.tags.indexOf(tag.toLowerCase()) !== -1;\n            } else {\n              found |= post.title.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n              found |= post.bait.toLowerCase().indexOf(searchText.toLowerCase()) !== -1;\n            }\n          }\n          return found;\n        });\n        setPosts(filteredPosts);\n    } else setPosts(POSTS);\n  };\n\n  useEffect(() => {\n    setFilteredPosts(searchInputValue);\n  }, [searchInputValue]);\n\n  useEffect(() => {\n    setSearchText(searchQuery || \"\");\n  }, [searchQuery]);\n\n  const handleChangeSearch = (searchText) => {\n    setSearchText(searchText);\n  };\n\n  return(\n    <div className=\"post-list-container\">\n      {posts.length > 0 && (\n        <>\n          <Search searchText={searchInputValue} onChange={handleChangeSearch} />\n          <div className=\"post-list\">\n            {posts.map((post, idx) => {\n              return (\n                <PostView\n                  key={post.id.toString()}\n                  id={post.id}\n                  title={post.title}\n                  bait={post.bait}\n                  publishedAt={post.publishedAt}\n                  numMinRead={post.numMinRead}\n                  tags={post.tags}\n                  lastPost={idx === posts.length - 1} />\n              );\n            })}\n          </div>\n        </>\n      )}\n      {posts.length === 0 && <div className=\"no-results-msg\">Temporarily down</div>}\n    </div>\n  );\n};\n\nexport default PostList;\n","import \"./nav-bar.css\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const history = useHistory();\n\n  const items = [{\n    id: \"resume\",\n    name: \"Resume\",\n    route: \"./resume.pdf\",\n    icon: \"./resume.png\"\n  }, {\n    id: \"github\",\n    name: \"Github\",\n    route: \"https://github.com/sk364\",\n    icon: \"./github.png\"\n  }, {\n    id: \"li\",\n    name: \"Linked In\",\n    route: \"https://www.linkedin.com/in/supah-hakah\",\n    icon: \"./linkedIn.png\"\n  }];\n\n  return (\n    <div className=\"nav-bar\">\n      <div className=\"brand\">\n        Sachin Kukreja\n      </div>\n\n      <div className=\"nav-items\">\n        {items.map(item => {\n          return (\n            <div className=\"nav-item\" key={item.id}>\n              <img src={item.icon} className={`icon ${item.id}`} alt=\"icon\" />\n              {item.route && (\n                <a href={item.route} target=\"_blank\">{item.name}</a>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import \"./home.css\";\nimport React from \"react\";\nimport PostList from \"./post-list\";\nimport { useLocation } from \"react-router-dom\";\nimport NavBar from \"./nav-bar\";\n\nconst Home = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const searchQuery = query.get(\"search\");\n\n  return (\n    <>\n      <NavBar />\n      <PostList searchQuery={searchQuery} />\n    </>\n  );\n};\n\nexport default Home;\n","import \"./post-detail.css\";\n\nimport React from \"react\";\nimport parse from \"html-react-parser\";\nimport NavBar from \"./nav-bar\";\nimport { POSTS } from \"./constants\";\nimport { getTagString, computeRecordPublishedSince } from \"./utils\";\n\nconst PostDetail = ({ match }) => {\n  const { id } = match.params;\n  const post = POSTS.find(_post => _post.id.toString() === id);\n  const { title, bait, content, tags, publishedAt, numMinRead } = post;\n\n  const formatContent = () => {\n    const tagString = getTagString(tags);\n    const publishedSince = computeRecordPublishedSince(publishedAt);\n\n    return content\n      .replace(\"{title}\", title)\n      .replace(\"{bait}\", bait)\n      .replace(\"{tags}\", tagString)\n      .replace(\"{numMinRead}\", numMinRead)\n      .replace(\"{publishedSince}\", publishedSince);\n  };\n\n  const htmlContent = formatContent();\n\n  return(\n    <>\n      <NavBar />\n      <div className=\"post-detail\">{ parse(htmlContent) }</div>\n    </>\n  );\n};\n\nexport default PostDetail;\n","import React from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\nimport PostDetail from \"./post-detail\";\n\nconst App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/:id\" component={PostDetail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}